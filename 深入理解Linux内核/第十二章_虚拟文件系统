对于所调用的每个读、写或其他函数，内核都能把它们替换为文件所在的文件系统的实际函数

以cp函数为例，
$ cp /floppy/TEST /tmp/test
cp程序并不需要知道/floppy/TEST 和 /tmp/test具体是什么文件系统类型；cp直接与VFS交互

通用文件模型 VFS的主要思想在于
    引入了一个通用的文件模型

Linux 内核源码其实是没有read()或ioctl()这种函数的具体实现的，每个操作实际上都是利用指向
具体文件系统的实际的函数的指针。

内核负责把合适的指针分配给file变量，并且负责调用具体文件系统的函数

超级块对象
存放关于已安装文件系统的信息，对应磁盘上的文件系统控制块

索引节点对象
存放文件的信息，对应磁盘上的文件控制块

文件对象
运行时位于内存

目录项对象
为了方便查找操作，VFS引入了目录项的概念。每个dentry代表路径的一个特定部分
目录项对象没有对应的磁盘数据结构
